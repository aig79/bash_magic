#!/usr/bin/env bash

action=$1
shift
item=$1
shift
param=$*
shift

function usage {
	echo "  $(basename $0) [<item date>] [remove]"
	echo "    Append or remove date threshold to or from item."
	echo "    If arguments are omitted, all scheduled tasks are listed."
	echo "    Intended to be used with futureTasks \
(http://github.com/FND/todo.txt-cli/blob/extensions/futureTasks)."
	echo "    Example: $ $TODO_SH $(basename $0) 42 tomorrow"
	echo ""
	exit
}

[ "$action" = "usage" ] && usage

PATTERN=" t:\([0-9]\{2,4\}[^A-Za-z0-9]\)\{2\}[0-9]\{2,4\}"

if [ -z $item ]; then
	cat $TODO_FILE | grep "$PATTERN" | sort # TODO: use todo.sh's list function (required for coloring)
elif [ "$param" = "remove" ]; then
	TASK=`$TODO_FULL_SH -p list $item | head -n1 | sed -e "s/$PATTERN//"` # remove threshold
	TASK=`echo $TASK | sed -e "s/^[0-9]* //"` # remove item number
	TASK=`echo $TASK | sed -e "s/^([A-Z])* //"` # remove priority (retained todo.sh's replace command)
	$TODO_FULL_SH replace $item "$TASK"
else
	# TODO: remove existing date first
	$TODO_FULL_SH append $item "t:"`date -d "$param" +%F`
fi
